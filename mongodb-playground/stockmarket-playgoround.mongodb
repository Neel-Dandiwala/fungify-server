// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('lgzwkowa5o4fjn5z0za9');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.

// Insert a few documents into the sales collection.
db.buy.insertMany([
  { '_id': 1, 'price': 100, 'quantity' : 10, 'userId': '63d51bfd38b05a4b2cce6e02','date': new Date('2014-03-01T09:00:00Z')},
  { '_id': 2, 'price': 101, 'quantity' : 20, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2014-03-01T09:00:00Z')},
  { '_id': 3, 'price': 101, 'quantity' : 10, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2014-03-15T09:00:00Z')},
  { '_id': 4, 'price': 102, 'quantity' : 20, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2014-03-15T09:00:00Z')},
  { '_id': 5, 'price': 102, 'quantity' : 10, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2014-04-04T11:21:39.736Z')},
  { '_id': 6, 'price': 102, 'quantity' : 10, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2014-04-04T11:21:39.736Z')},
  { '_id': 7, 'price': 101, 'quantity' : 10, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2014-04-04T21:23:13.331Z')},
  { '_id': 8, 'price': 95, 'quantity' : 10, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2015-06-04T05:08:13Z')},
  { '_id': 9, 'price': 98, 'quantity' : 10, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2015-09-10T08:43:00Z')},
  { '_id': 10, 'price': 99, 'quantity' : 10, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2016-02-06T20:20:13Z')},
]);

db.sell.insertMany([
  { '_id': 1, 'price': 100, 'quantity' : 10, 'userId': '63d5a76f8cc620abaf18d6bd','date': new Date('2014-03-01T09:00:00Z')},
  { '_id': 2, 'price': 101, 'quantity' : 30, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2014-03-01T09:00:00Z')},
  { '_id': 3, 'price': 101, 'quantity' : 10, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2014-03-15T09:00:00Z')},
  { '_id': 4, 'price': 102, 'quantity' : 30, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2014-03-15T09:00:00Z')},
  { '_id': 5, 'price': 102, 'quantity' : 10, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2014-04-04T11:21:39.736Z')},
  { '_id': 6, 'price': 102, 'quantity' : 10, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2014-04-04T11:21:39.736Z')},
  { '_id': 7, 'price': 110, 'quantity' : 10, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2014-04-04T21:23:13.331Z')},
  { '_id': 8, 'price': 95, 'quantity' : 10, 'userId': '63d5a76f8cc620abaf18d6bd', 'date': new Date('2015-06-04T05:08:13Z')},
  { '_id': 9, 'price': 98, 'quantity' : 10, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2015-09-10T08:43:00Z')},
  { '_id': 10, 'price': 99, 'quantity' : 10, 'userId': '63d51bfd38b05a4b2cce6e02', 'date': new Date('2016-02-06T20:20:13Z')},
]);


// // Run a find command to view items sold on April 4th, 2014.
// db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// // Build an aggregation to view total sales for each product in 2014.
// const aggregation = [
//   { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
//   { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
// ];

// // Run the aggregation and open a cursor to the results.
// // Use toArray() to exhaust the cursor to return the whole result set.
// // You can use hasNext()/next() to iterate through the cursor page by page.
// db.sales.aggregate(aggregation);
